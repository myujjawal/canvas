{"version":3,"sources":["components/navbar.js","components/Canvas.js","components/PropertiesPanel.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonAppBar","name","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","mr","Typography","variant","component","props","ref","useRef","useState","setPosition","useThree","viewport","aspect","width","hovered","hover","useFrame","state","delta","current","rotation","x","bind","useDrag","offset","y","z","pointerEvents","onClick","boxClicked","setBox","_id","onPointerOver","event","onPointerOut","args","App","box","color1","setColor1","color2","setColor2","useEffect","intensity","angle","penumbra","PropertiesPanel","setcolor","className","minWidth","FormControl","fullWidth","InputLabel","id","Select","value","label","onChange","target","MenuItem","sidebarRef","isResizing","setIsResizing","sidebarWidth","setSidebarWidth","startResizing","React","useCallback","mouseDownEvent","stopResizing","resize","mouseMoveEvent","clientX","getBoundingClientRect","left","window","addEventListener","removeEventListener","setX","setY","console","log","style","onMouseDown","e","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35c4ea88.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\n\r\nexport default function ButtonAppBar({ name = \"Box 1\" }) {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            {name}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Canvas, useFrame, useThree } from \"@react-three/fiber\";\r\nimport { useDrag } from \"react-use-gesture\";\r\n\r\nfunction Box(props) {\r\n  // This reference gives us direct access to the THREE.Mesh object\r\n  const ref = useRef();\r\n  const [position, setPosition] = useState(props.position);\r\n  const { size, viewport } = useThree();\r\n  const aspect = size.width / viewport.width;\r\n\r\n  // Hold state for hovered and clicked events\r\n  const [hovered, hover] = useState(false);\r\n  useFrame((state, delta) => (ref.current.rotation.x += 0.01));\r\n  const bind = useDrag(\r\n    ({ offset: [x, y] }) => {\r\n      const [, , z] = position;\r\n      setPosition([x / aspect, -y / aspect, z]);\r\n    },\r\n    { pointerEvents: true }\r\n  );\r\n\r\n  const handleClick = () => {\r\n    props.boxClicked(ref.current.position);\r\n    props.setBox(props._id);\r\n  };\r\n\r\n  // Subscribe this component to the render-loop, rotate the mesh every frame\r\n  // Return the view, these are regular Threejs elements expressed in JSX\r\n  return (\r\n    <mesh\r\n      {...props}\r\n      position={position}\r\n      {...bind()}\r\n      ref={ref}\r\n      // scale={clicked ? 1.5 : 1}\r\n      onClick={handleClick}\r\n      onPointerOver={(event) => hover(true)}\r\n      onPointerOut={(event) => hover(false)}\r\n    >\r\n      <boxGeometry args={[1, 1, 1]} />\r\n      <meshStandardMaterial color={hovered ? \"white\" : props.color} />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nexport default function App({ boxClicked, setBox, color, box }) {\r\n  const [color1, setColor1] = useState(\"orange\");\r\n  const [color2, setColor2] = useState(\"orange\");\r\n  useEffect(() => {\r\n    if (box === 1) {\r\n      setColor1(color);\r\n    } else if (box === 2) {\r\n      setColor2(color);\r\n    }\r\n  }, [color]);\r\n\r\n  return (\r\n    <Canvas>\r\n      <ambientLight intensity={0.5} />\r\n      <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\r\n      <pointLight position={[-10, -10, -10]} />\r\n      <Box\r\n        position={[-1, 0, 0]}\r\n        boxClicked={boxClicked}\r\n        _id={1}\r\n        setBox={setBox}\r\n        color={color1}\r\n      />\r\n      <Box\r\n        position={[1, 0, 0]}\r\n        boxClicked={boxClicked}\r\n        _id={2}\r\n        setBox={setBox}\r\n        color={color2}\r\n      />\r\n    </Canvas>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport \"./properties.css\";\r\n\r\nconst PropertiesPanel = ({ x, y, color, setcolor }) => {\r\n  //   const [color, setcolor] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setcolor(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"item\">X : {x}</div>\r\n      <div className=\"item\">Y : {y}</div>\r\n      <Box sx={{ minWidth: 120 }}>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"demo-simple-select-label\">Color </InputLabel>\r\n          <Select\r\n            // labelId=\"demo-simple-select-label\"\r\n            // id=\"demo-simple-select\"\r\n            value={color}\r\n            label=\"Color\"\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value={\"red\"}>Red</MenuItem>\r\n            <MenuItem value={\"blue\"}>Blue</MenuItem>\r\n            <MenuItem value={\"green\"}>Green</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertiesPanel;\r\n","import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/navbar\";\nimport Canvas from \"./components/Canvas\";\nimport PropertiesPanel from \"./components/PropertiesPanel\";\nfunction App() {\n  //****************** Making the panel Resizable **********************\n  const sidebarRef = useRef(null);\n  const [isResizing, setIsResizing] = useState(false);\n  const [sidebarWidth, setSidebarWidth] = useState(268);\n\n  const startResizing = React.useCallback((mouseDownEvent) => {\n    setIsResizing(true);\n  }, []);\n\n  const stopResizing = React.useCallback(() => {\n    setIsResizing(false);\n  }, []);\n\n  const resize = React.useCallback(\n    (mouseMoveEvent) => {\n      if (isResizing) {\n        setSidebarWidth(\n          mouseMoveEvent.clientX -\n            sidebarRef.current.getBoundingClientRect().left\n        );\n      }\n    },\n    [isResizing]\n  );\n\n  React.useEffect(() => {\n    window.addEventListener(\"mousemove\", resize);\n    window.addEventListener(\"mouseup\", stopResizing);\n    return () => {\n      window.removeEventListener(\"mousemove\", resize);\n      window.removeEventListener(\"mouseup\", stopResizing);\n    };\n  }, [resize, stopResizing]);\n  //***************************************************************  */\n  //Defining the state of the App\n  const [x, setX] = useState(1);\n  const [y, setY] = useState(0);\n  const [box, setBox] = useState(1);\n  const [color, setcolor] = React.useState(\"orange\");\n  console.log(color);\n  const boxClicked = (position) => {\n    setX(position.x);\n    setY(position.y);\n  };\n  return (\n    <div className=\"app-container\">\n      <Navbar name={box === 1 ? \"Box 1\" : \"Box 2\"} />\n      <div className=\"main-container\">\n        <div\n          ref={sidebarRef}\n          className=\"app-sidebar\"\n          style={{ width: sidebarWidth }}\n          onMouseDown={(e) => e.preventDefault()}\n        >\n          <Canvas\n            className=\"app-sidebar-content\"\n            boxClicked={boxClicked}\n            box={box}\n            setBox={setBox}\n            color={color}\n          />\n          <div className=\"app-sidebar-resizer\" onMouseDown={startResizing} />\n        </div>\n        <div className=\"app-frame\">\n          <PropertiesPanel x={x} y={y} color={color} setcolor={setcolor} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}